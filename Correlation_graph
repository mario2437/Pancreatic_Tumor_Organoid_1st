rm(list=ls())
graphics.off()

############################################################
####################Numeric_Correlation####################

library(Hmisc)
library(corrplot)
library(dplyr)
setwd("C://Users/BECAUSEWECAN/Desktop/PancreaticCancerOrganoid/Without_PDX/Figure 4")
data1<-read.table("drug_correlation_230228.txt", header=T, sep="\t", na.strings = "NA", fill=T, quote = "")
row.names(data1)<-as.vector(data1$SAMPLE)
data1<-data1[,2:ncol(data1)]
t.data1<-t(data1)

### Make dataframe as sample names on the first column and each row represents each sample
###rcorr function in Hmisc package detects significance levels for pearson and spearman correlations

res2<-rcorr(as.matrix(data1), type="pearson")

###Make_Function 

flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor  =(cormat)[ut],
    p = pmat[ut]
  )
}
cormatrix<-flattenCorrMatrix(res2$r, res2$P)

#pvalue arrange in increasing order and have only P < 0.05
S_cormatrix<-cormatrix%>%arrange(p)%>%filter(p<0.05)
drug<-colnames(data1)[1:18]
otherfactors<-colnames(data1)[19:69]

dim(S_cormatrix)

###one column
SS_cormatrix<-S_cormatrix %>% filter (row %in% drug)
dim(SS_cormatrix)
SSS_cormatrix<-SS_cormatrix %>% filter (column %in% otherfactors)
dim(SSS_cormatrix)

write.table(SSS_cormatrix, "PancO_cormatrix_ssGSEA_VAFKRAS_drug.txt", sep="\t", row.names=F)


data1<-read.table("PancO_correlation_drug_final_230302_t.txt", header=T, sep="\t", na.strings = "NA", fill=T)
rownames(data1)<-data1$SAMPLE
data1<-data1[,2:ncol(data1)]

res1<-cor(as.matrix(data1, use="pairwise.complete.obs"))
res2<-rcorr(as.matrix(data1), type="pearson")
corrplot(res3, method="square", type = "upper", order="hclust", tl.cex=0.7)
dev.copy(tiff,"correlation_total_mixed_sorted_230309.tiff",width=7, height=7, units="in",res=200) 
dev.off() 

# mat : is a matrix of data
# ... : further arguments to pass to the native R cor.test function
cor.mtest <- function(mat, ...) {
  mat <- as.matrix(mat)
  n <- ncol(mat)
  p.mat<- matrix(NA, n, n)
  diag(p.mat) <- 0
  for (i in 1:(n - 1)) {
    for (j in (i + 1):n) {
      tmp <- cor.test(mat[, i], mat[, j], ...)
      p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
    }
  }
  colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
  p.mat
}
# matrix of the p-value of the correlation
p.mat <- cor.mtest(data1)
head(p.mat[, 1:5])

col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(res1, method="color", col=col(200),  
         type="upper", order="hclust", 
         tl.col="black", tl.srt=45, #Text label color and rotation
         # Combine with significance
         p.mat = p.mat, sig.level = 0.05, insig = "blank", tl.cex=0.4,
         # hide correlation coefficient on the principal diagonal
         diag=FALSE 
)

plot.new()
dev.copy(tiff,"pancO_relation_230309.tiff",width=8, height=8, units="in",res=200) 
dev.off() 



#############################################
corrplot2 <- function(data,
                      method = "pearson",
                      sig.level = 0.05,
                      order = "original",
                      diag = FALSE,
                      type = "upper",
                      tl.srt = 90,
                      number.font = 1,
                      number.cex = 1,
                      mar = c(0, 0, 0, 0)) {
  library(corrplot)
  data_incomplete <- data
  data <- data[complete.cases(data), ]
  mat <- cor(data, method = method)
  cor.mtest <- function(mat, method) {
    mat <- as.matrix(mat)
    n <- ncol(mat)
    p.mat <- matrix(NA, n, n)
    diag(p.mat) <- 0
    for (i in 1:(n - 1)) {
      for (j in (i + 1):n) {
        tmp <- cor.test(mat[, i], mat[, j], method = method)
        p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
      }
    }
    colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
    p.mat
  }
  p.mat <- cor.mtest(data, method = method)
  col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
  corrplot(mat,
           method = "color", col = col(200), number.font = number.font,
           mar = mar, number.cex = number.cex,
           type = type, order = order,
           addCoef.col = "black", # add correlation coefficient
           tl.col = "black", tl.srt = tl.srt, # rotation of text labels
           # combine with significance level
           p.mat = p.mat, sig.level = sig.level, insig = "blank",
           # hide correlation coefficients on the diagonal
           diag = diag
  )
}

corrplot2(
  data = data1,
  method = "pearson",
  sig.level = 0.05,
  order = "original",
  diag = FALSE,
  type = "upper",
  tl.srt = 75
)


#############################################
library(corrplot)

corrplot(cor(data1),
         method = "number",
         type = "upper" # show only upper side
)



library(ggpubr)

setwd("C://Users/BECAUSEWECAN/Desktop")


################Basic plots################

ggscatter(data1, x = "MYC_TARGETS_V1", y = "Gemcitabine",
          add = "reg.line",                                 # Add regression line
          conf.int = TRUE,                                  # Add confidence interval
          add.params = list(color = "blue",
                            fill = "lightgray")
)+
  stat_cor(method = "pearson", label.x = 0.5, label.y = 2.3)  # Add correlation coefficient

dev.copy(tiff,"Gemcitabine_KRAS_c35G_A_total_20221027.tiff",width=10, height=10, units="in",res=200) 
dev.off() 


################Color by shape################

ggscatter(data1, x = "G2M_CHECKPOINT", y = "Cyclopamine",
          add = "reg.line",                         # Add regression line
          conf.int = TRUE,                          # Add confidence interval
          color = "meta_nometa", palette = c("#660099", "#FF9900"),           # Color by groups "cyl"
          shape = "pre_chemo"                             # Change point shape by groups "cyl"
)+
  stat_cor(aes(color = meta_nometa), label.x = -0.5)           # Add correlation coefficient

dev.copy(tiff,"Irinotecan_MYC_TARGETS_V1_correlatioon_meta_230309.tiff",width=8, height=8, units="in",res=200) 
dev.copy(tiff,"Gemcitabine_G2M_CHECKPOINT_correlatioon_meta_prechemo_230309.tiff",width=8, height=8, units="in",res=200) 
dev.copy(tiff,"Fluorouracil_KRAS_c35G_A_correlatioon_meta_regimen_230309.tiff",width=8, height=8, units="in",res=200) 
dev.copy(tiff,"Fluorouracil_KRAS_c35G_A_correlatioon_meta_metasite_230309.tiff",width=8, height=8, units="in",res=200) 

dev.off() 

graphics.off()
